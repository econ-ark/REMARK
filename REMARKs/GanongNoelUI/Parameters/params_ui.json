{
  "Description_of_labels": "For MATLAB-JSON replication step- Comment contains any value which differed between Matlab_Structural_Estimation setup and here; note for the replication step with Python vs Matlab. Previous- Name of variable in Matlab; Matlab setup file name in which variable defined; matlab variable value (python variable value; Do we need to [FIX] this or is it [OK]",
  "Nagents": 1,
  "Nagents_bootstrap": 1,
  "Nagents_bootstrap_comment": "NumOfPeopleBootstrap; EstimateRhoAndBetahat.m; 10000 (NONE; doesn't exist in Python); FIX? Maybe..",
  "REMOVED_total_simuation_periods_including_T": 65,
  "final_age": 265,
  "retirement_age": 265,
  "initial_age": 25,
  "R": 1.0025,
  "R_save": 1.0025,
  "R_bor": 1.015,
  "N_states": 9,
  "z_vals_FL":[1,0.75,0.75,0.75,0.75,0.75,0.54,0.54,0.54],
  "z_vals": [
    1,
    0.83,
    0.83,
    0.83,
    0.83,
    0.83,
    0.83,
    0.83,
    0.54
  ],
  "Pi": [
    [
      0.975,
      0.025,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.193,
      0,
      0.807,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.23,
      0,
      0,
      0.77,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.212,
      0,
      0,
      0,
      0.788,
      0,
      0,
      0,
      0
    ],
    [
      0.183,
      0,
      0,
      0,
      0,
      0.817,
      0,
      0,
      0
    ],
    [
      0.188,
      0,
      0,
      0,
      0,
      0,
      0.812,
      0,
      0
    ],
    [
      0.259,
      0,
      0,
      0,
      0,
      0,
      0,
      0.741,
      0
    ],
    [
      0.163,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.837
    ],
    [
      0.163,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.837
    ]
  ],
"Pi_extend":[
 [
  0.975,
  0.025,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0
 ],
 [
  0.193,
  0.0,
  0.807,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0
 ],
 [
  0.23,
  0.0,
  0.0,
  0.77,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0
 ],
 [
  0.212,
  0.0,
  0.0,
  0.0,
  0.788,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0
 ],
 [
  0.183,
  0.0,
  0.0,
  0.0,
  0.0,
  0.817,
  0.0,
  0.0,
  0.0,
  0.0
 ],
 [
  0.188,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.812,
  0.0,
  0.0,
  0.0
 ],
 [
  0.259,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.741,
  0.0,
  0.0
 ],
 [
  0.163,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.837,
  0.0
 ],
 [
  0.163,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.837
 ],
 [
  0.163,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.837
 ]
],
"Pi_spike_3": [
    [
      0.9675,
      0.0325,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0
    ],
    [
      0.3,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.7
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75
    ]
  ],
  "Pi_spike_4": [
    [
      0.9675,
      0.0325,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0
    ],
    [
      0.4,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.6
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75
    ]
  ],
  "Pi_spike_5": [
    [
      0.9675,
      0.0325,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0
    ],
    [
      0.5,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.5
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75
    ]
  ],
  "Pi_spike_6": [
    [
      0.9675,
      0.0325,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0
    ],
    [
      0.6,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.4
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75
    ]
  ],
  "Pi_spike_7": [
    [
      0.9675,
      0.0325,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0
    ],
    [
      0.7,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.3
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75
    ]
  ],
  "Pi_spike_7_low_pre": [
    [
      0.9675,
      0.0325,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.1,
      0,
      0.9,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.1,
      0,
      0,
      0.9,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.1,
      0,
      0,
      0,
      0.9,
      0,
      0,
      0,
      0
    ],
    [
      0.1,
      0,
      0,
      0,
      0,
      0.9,
      0,
      0,
      0
    ],
    [
      0.1,
      0,
      0,
      0,
      0,
      0,
      0.9,
      0,
      0
    ],
    [
      0.1,
      0,
      0,
      0,
      0,
      0,
      0,
      0.9,
      0
    ],
    [
      0.7,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.3
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75
    ]
  ],
  "Pi_low_pre": [
    [
      0.9675,
      0.0325,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.15,
      0,
      0.85,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.15,
      0,
      0,
      0.85,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.15,
      0,
      0,
      0,
      0.85,
      0,
      0,
      0,
      0
    ],
    [
      0.15,
      0,
      0,
      0,
      0,
      0.85,
      0,
      0,
      0
    ],
    [
      0.15,
      0,
      0,
      0,
      0,
      0,
      0.85,
      0,
      0
    ],
    [
      0.15,
      0,
      0,
      0,
      0,
      0,
      0,
      0.85,
      0
    ],
    [
      0.3,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.7
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75
    ]
  ],
  "Pi_low_exhaust_15": [
    [
      0.9675,
      0.0325,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0,
      0
    ],
    [
      0.25,
      0,
      0,
      0,
      0,
      0,
      0,
      0.75,
      0
    ],
    [
      0.3,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.7
    ],
    [
      0.15,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0.85
    ]
  ],
  "e_extend":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,8,8,8,8],
  "c_plt_start_index": 17,
  "s_plt_start_index":22,
  "c_s_plt_start_index_comment":"Specifies where in e_extend t=-5 is" ,
  "plt_norm_index":3,
  "plt_norm_index_comment":"Specifies the time in the truncated series where t=-2 is for normalization",
  "phi": 1.5,
  "k": 27.0,
  "beta": 0.991,
  "beta_hyp": 1.0,
  "rho": 2.0,
  "L": 4.3,
  "a0_data": 0.66,
  "seed": 123456,
  "base0indexretire": 40,
  "bcmc_db_svw": 1.32,
  "bcmc_dt_svw": 1.52,
  "rho_first_guess": 4,
  "beta_first_guess": 0.99,
  "beta_lower_bound": 0.0001,
  "beta_upper_bound": 15,
  "rho_lower_bound": 0.0001,
  "rho_upper_bound": 15,
  "upper_lower_bounds_comment": "The upper and lower bounds are used in the 'errors_model_vs_data' function. Some of the derivative-free optimization routines can explore outside reasonable (economic) ranges for the beta and rho paramters, eg beta < 0. These bounds ensure that the 'errors' function will return an extrememly high value outside of the bounds.",
  "psi_N": 8,
  "xi_N": 8,
  "p_unemploy": 0,
  "p_unemploy_comment": "Need to confirm that Python with this value will work correctly. AH, actually, is this the indicator that there is or is not a borrow constraint? In a round-about way? Confirm in the code. 0.001",
  "p_unemploy_retire": 0,
  "p_unemploy_retire_comment": "Same as above. 0.0001",
  "value_unemploy": 0,
  "value_unemploy_retire": 0,
  "brute_force_grid_size": 103,
  "spline_k": 1,
  "grid_type": "exp_mult",
  "exp_nest": 3,
  "REMOVED_final_work_index": 25,
  "REMOVED_final_work_age": 65,
  "final_work_age_comment": "Currently not used.",
  "constrained": true,
  "constrained_comment": "Need to confirm that Py version replicates with this value.",
  "a_min": 0.00001,
  "a_max": 4,
  "a_huge": 10,
  "a_huge_comment": "Previous value. 5",
  "NEW_a_huge": "AlphaHuge;setup_params.m; 5 (NONE); FIX",
  "NEW_a_huge_comment": "Value of Alpha at which we connect to perf foresight function; believe used in Method Mod; FIX",
  "a_size": 10,
  "a_size_comment": "old value: 10",
  "a_extra": 0.005,
  "a_extra_comment": "Not in Matlab params setup; hardcoded. __?__ (0.03); Need to ask Chris why this is added to all vectors. FIX",
  "bootstrap_sample_size": 30,
  "initial_wealth_income_ratio_seed": 123456,
  "initial_wealth_income_ratio_seed_comment": "This seed is used to draw the initial value of a0 ~ W/P ration used in the simulation. If we didn't include a seed here results would not be replicable.",
  "initial_wealth_income_ratio_vals": [
    0.17,
    0.5,
    0.83
  ],
  "NEW_initial_wealth_income_ratio_vals_comment": "Note that we should likely have other possible string-based 'flags' here which indicate to the code to use bootstrapping or similar during setup. FIX",
  "initial_wealth_income_ratio_probs": [
    0.33333,
    0.33333,
    0.33334
  ],
  "variance_initial_log_income": 0.3329,
  "variance_initial_log_income_comment": "Need to determine correct way to implement this in the Python code. 0.3329",
  "NEW_initial_wealth_income_ratio_variance": "VarInitialLogInc; setup_params.m; .3329  (NONE); FIX",
  "quantile_to_match": 0.5,
  "quantile_to_math_comment": "[median] (NONE in python -- see where this used in Matlab, implement same estimator in Python, as quickly as possible.)",
  "cohort_age_groups": {
    "1": [
      26,
      27,
      28,
      29,
      30
    ],
    "2": [
      31,
      32,
      33,
      34,
      35
    ],
    "3": [
      36,
      37,
      38,
      39,
      40
    ],
    "4": [
      41,
      42,
      43,
      44,
      45
    ],
    "5": [
      46,
      47,
      48,
      49,
      50
    ],
    "6": [
      51,
      52,
      53,
      54,
      55
    ],
    "7": [
      56,
      57,
      58,
      59,
      60
    ]
  },
  "cohort_age_groups_comment": "Note that the above is not used in the MATLAB code. We likely want to *perhaps* add an explicit usage there, to ensure that we get the correct values matching in the SCF code.",
  "psi_sigma": [
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.282842712475,
    0.278388218142,
    0.273861278753,
    0.269258240357,
    0.264575131106,
    0.259807621135,
    0.25495097568,
    0.25,
    0.244948974278,
    0.239791576166,
    0.234520787991,
    0.229128784748,
    0.22360679775,
    0.217944947177,
    0.212132034356,
    0.206155281281,
    0.2,
    0.19364916731,
    0.187082869339,
    0.180277563773,
    0.173205080757,
    0.179912259317,
    0.186378223259,
    0.192627264835,
    0.19867985356,
    0.204553428872,
    0.210262993215,
    0.215821563724,
    0.221240521652,
    0.226529886491,
    0.231698533716,
    0.236754369715,
    0.241704473752,
    0.246555214271,
    0.251312344975,
    0.255981084828,
    0.260566185147,
    0.26507198625,
    0.269502465568,
    0.273861278753
  ],
  "xi_sigma": [
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.001,
    0.173205080757,
    0.181164325463,
    0.188788309069,
    0.196116135138,
    0.203179849596,
    0.210006104917,
    0.21661735139,
    0.223032710031,
    0.229268625337,
    0.235339362166,
    0.241257389949,
    0.24703368399,
    0.252677964702,
    0.258198889747,
    0.263604209919,
    0.268900896815,
    0.274095248277,
    0.279192976181,
    0.284199280029,
    0.289118909084,
    0.293956215124,
    0.298715197522,
    0.303399541943,
    0.308012653753,
    0.312557686983,
    0.31703756956,
    0.321455025366,
    0.325812593608,
    0.330112645887,
    0.334357401286,
    0.338548939764,
    0.342689214064,
    0.34678006035,
    0.350823207723,
    0.354820286761,
    0.358772837208,
    0.362682314896,
    0.366550098021,
    0.370377492809,
    0.374165738677
  ],
  "Gamma_vector": [
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0.7,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.01,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025,
    1.025
  ],
  "Gamma_vector_comment": "The Gamma vector *must* contain a value for the final T period, even if it is NA or None. Still true?",
  "timevary_discount_factors": [
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.9902111,
    0.8287214,
    0.981697,
    0.9803439,
    0.9791338,
    0.9780698,
    0.9771553,
    0.9763936,
    0.9757881,
    0.9753422,
    0.9750595,
    0.9749437,
    0.9749984,
    0.9752274,
    0.9756346,
    0.9762239,
    0.9769995,
    0.9779656,
    0.9791264,
    0.9804866,
    0.9820506,
    0.9838233,
    0.9858095,
    0.9880143,
    0.9904431,
    0.9931012,
    0.9959943,
    0.9991282,
    1.002509,
    1.006143,
    1.010037,
    1.014198,
    1.018632,
    1.023348,
    1.028352,
    1.033653,
    1.039259,
    1.045179,
    1.051422,
    1.057997,
    1.064914
  ],
  "survival_probs": [
    0.63095734,
    0.63095734,
    0.63095734,
    0.63095734,
    0.63095734,
    0.93721595,
    0.93721595,
    0.93721595,
    0.93721595,
    0.93721595,
    0.96207901,
    0.96207901,
    0.96207901,
    0.96207901,
    0.96207901,
    0.97567062,
    0.97567062,
    0.97567062,
    0.97567062,
    0.97567062,
    0.98438596,
    0.98438596,
    0.98438596,
    0.98438596,
    0.98438596,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1
  ],
  "survival_probs_comment": "Old version- [0.63096,0.63096,0.63096,0.63096,0.63096, 0.93722,0.93722,0.93722,0.93722,0.93722, 0.96208,0.96208,0.96208,0.96208,0.96208, 0.97567,0.97567,0.97567,0.97567,0.97567, 0.98439,0.98439,0.98439,0.98439,0.98439,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000,1.000]",
  "survival_probs_comment_prev": "We need to ensure that these survival probabilities are correct. Had to adjust them to match OpenCL output. Review creation process for survival_probs."
}